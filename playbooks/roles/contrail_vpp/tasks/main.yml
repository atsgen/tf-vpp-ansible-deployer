---
- name: "create /etc/contrail/vpp"
  file:
    path: /etc/contrail/vpp
    state: directory
    recurse: yes

- name: "get /etc/contrail/common_vrouter.env stat"
  stat:
    path: "/etc/contrail/common_vrouter.env"
  register: st

- name: "delete /etc/contrail/common_vrouter.env if exists"
  file:
    path: "/etc/contrail/common_vrouter.env"
    state: absent
  when: st.stat.exists is defined and st.stat.exists

- name: "create /etc/contrail/common_vrouter.env"
  file:
    path: "/etc/contrail/common_vrouter.env"
    state: touch

- name: "get pop"
  set_fact:
    location: "{{ roles[instance_name].vpp.location }}"
  when: roles[instance_name].vpp.location is defined

- name: "init pop control peer list"
  set_fact:
    pop_control_list: []
  when: location is defined

- name: "add pop control nodes to list"
  set_fact:
    pop_control_list: "{{ pop_control_list + [ instances[item.key].ip ] }}"
  when: location is defined and item.value.control is defined and item.value.control.location is defined and item.value.control.location == location
  with_dict: "{{ roles }}"
  ignore_errors: yes

- name: "create controler host list if not defined"
  set_fact:
    pop_control_nodes: "{{ pop_control_list|join(',') }}"
  when: pop_control_list is defined

- name: "create contrail_configuration.CONTROL_NODES"
  set_fact:
    contrail_configuration: "{{ contrail_configuration|default({})|combine({'CONTROL_NODES': pop_control_nodes}) }}"
  when: pop_control_nodes is defined and roles[instance_name].vpp.CONTROL_NODES is undefined

- name: "set DNS servers if location is defined"
  set_fact:
    contrail_configuration: "{{ contrail_configuration|default({})|combine({'DNS_NODES': contrail_configuration.DNS_NODES|default(contrail_configuration.CONTROLLER_NODES)}) }}"
  when: pop_control_nodes is defined and roles[instance_name].vpp.DNS_NODES is undefined

- name: "populate cluster wide common_vrouter.env"
  lineinfile: dest=/etc/contrail/common_vrouter.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ contrail_configuration }}"
  no_log: True

- name: "populate instance specific common_vrouter.env"
  lineinfile: dest=/etc/contrail/common_vrouter.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ instances[instance_name].contrail_configuration }}"
  when: instances[instance_name].contrail_configuration is defined
  ignore_errors: yes
  no_log: True

- name: "populate pod specific common_vrouter.env"
  lineinfile: dest=/etc/contrail/common_vrouter.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ roles[instance_name].vpp }}"
  ignore_errors: yes
  no_log: True

- name: "populate pop settings"
  lineinfile: dest=/etc/contrail/common_vrouter.env regexp='^{{ item.key }}=.*' line="{{ item.key }}={{ item.value }}" state=present
  with_dict: "{{ remote_locations[location] }}"
  when: location is defined

- name: "add kubemanager token to common_vrouter.env"
  lineinfile: dest=/etc/contrail/common_vrouter.env regexp='^K8S_TOKEN=.*' line="K8S_TOKEN={{ hostvars[k8s_master_name].kubemanagertoken }}" state=present
  when: k8s_master_name is defined and hostvars[k8s_master_name].kubemanagertoken is defined

- name: "add SUBCLUSTER name if location is defined and subcluster name is defined"
  lineinfile: dest=/etc/contrail/common_vrouter.env regexp='^SUBCLUSTER=.*' line="SUBCLUSTER={{ remote_locations[location].SUBCLUSTER }}" state=present
  when: location is defined and remote_locations[location].SUBCLUSTER is defined

- name: "add SUBCLUSTER name if location is defined and subcluster name is undefined"
  lineinfile: dest=/etc/contrail/common_vrouter.env regexp='^SUBCLUSTER=.*' line="SUBCLUSTER={{ location }}" state=present
  when: location is defined and remote_locations[location].SUBCLUSTER is undefined

- name: update vpp image
  shell: "docker pull {{ container_registry }}/{{ item }}:{{ contrail_version_tag }}"
  with_items:
    - contrail-node-init
    - contrail-nodemgr
    - contrail-vpp-kernel-init
    - contrail-vpp-agent
  when:
    - contrail_configuration.UPDATE_IMAGES is undefined or contrail_configuration.UPDATE_IMAGES != false
    - roles[instance_name].vpp.AGENT_MODE is undefined or roles[instance_name].vpp.AGENT_MODE != 'dpdk'

- name: create contrail vpp compose file
  template:
    src: contrail-vpp.yaml.j2
    dest: "/etc/contrail/vpp/docker-compose.yaml"
  when: roles[instance_name].vpp.AGENT_MODE is undefined or roles[instance_name].vpp.AGENT_MODE != 'dpdk'

- name: "start contrail vpp"
  docker_service:
    project_src: /etc/contrail/vpp
  when: roles[instance_name].vpp.AGENT_MODE is undefined or roles[instance_name].vpp.AGENT_MODE != 'dpdk'

- name: update image for dpdk vpp
  shell: "docker pull {{ container_registry }}/{{ item }}:{{ contrail_version_tag }}"
  with_items:
    - contrail-node-init
    - contrail-nodemgr
    - contrail-vpp-kernel-init-dpdk
    - contrail-vpp-agent-dpdk
    - contrail-vpp-agent
  when:
    - contrail_configuration.UPDATE_IMAGES is undefined or contrail_configuration.UPDATE_IMAGES != false
    - roles[instance_name].vpp.AGENT_MODE is defined
    - roles[instance_name].vpp.AGENT_MODE == 'dpdk'

- name: "create contrail dpdk vpp compose file"
  template:
    src: contrail-vpp-dpdk.yaml.j2
    dest: "/etc/contrail/vpp/docker-compose.yaml"
  when: roles[instance_name].vpp.AGENT_MODE is defined and roles[instance_name].vpp.AGENT_MODE == 'dpdk'

- name: "start contrail dpdk vpp"
  docker_service:
    project_src: /etc/contrail/vpp
  when: roles[instance_name].vpp.AGENT_MODE is defined and roles[instance_name].vpp.AGENT_MODE == 'dpdk'

- name: "Restart nova-compute"
  shell: "docker restart nova_compute"
  when: roles[instance_name].vpp.AGENT_MODE is defined and roles[instance_name].vpp.AGENT_MODE == 'dpdk'
  ignore_errors: yes

- name: "fixing contrail bug vrouter-port-control"
  shell: "docker exec --user root nova_compute cp /opt/plugin/bin/vrouter-port-control /usr/bin/"
  when: roles[instance_name].vpp.AGENT_MODE is defined and roles[instance_name].vpp.AGENT_MODE == 'dpdk'
  ignore_errors: yes

- name: "create /var/log/contrail/lbaas"
  file:
    path: /var/log/contrail/lbaas
    state: directory
    recurse: yes

- name: "configure rsyslogd"
  shell: "echo '$AddUnixListenSocket /var/log/contrail/lbaas/haproxy.log.sock' > /etc/rsyslog.d/contrail-lbaas-haproxy.conf"

- name: "restart rsyslogd"
  service:
    name: rsyslog
    state: restarted
