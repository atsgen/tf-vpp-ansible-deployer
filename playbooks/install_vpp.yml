# orchestrator MUST be passed as a command line argument like so:
#
# ansible-playbook -i inventory/ -e orchestrator=openstack playbook/install_contrail.yml
#
- name: Create container host group and evaluate variables for Contrail
  hosts: localhost
  connection: local
  gather_facts: yes
  pre_tasks:
    - name: Expose instances
      set_fact:
          instances: "{{ instances }}"
      when: hostvars['localhost']['instances'] is undefined
    - name: Expose global configuration
      set_fact:
          global_configuration: "{{ global_configuration | default({}) }}"
      when: hostvars['localhost']['global_configuration'] is undefined
    - name: Expose remote_locations configuration
      set_fact:
          remote_locations: "{{ remote_locations | default({}) }}"
      when: hostvars['localhost']['remote_locations'] is undefined
    - name: Expose provider config
      set_fact:
          provider_config: "{{ provider_config | default({}) }}"
      when: hostvars['localhost']['provider_config'] is undefined
  roles:
    - contrail_deployer
    - k8s_deployer
  vars_files:
    - "{{ config_file }}"
  tags: always
  environment:
    - "{{ contrail_ansible_environment | default({})}}"

- name: Install VPP
  hosts: container_hosts
  gather_facts: yes
  pre_tasks:
    - name: define k8s_master_ip
      set_fact:
          k8s_master_ip: "{{ hostvars['localhost'].k8s_master_ip }}"
      when: hostvars['localhost'].k8s_master_ip is defined
    - name: define k8s_master_name
      set_fact:
          k8s_master_name: "{{ hostvars['localhost'].k8s_master_name }}"
      when: hostvars['localhost'].k8s_master_name is defined
  roles:
    - vpp
  vars:
    - provider_config: "{{ hostvars['localhost']['provider_config'] }}"
    - contrail_configuration: "{{ hostvars['localhost'].contrail_configuration }}"
    - global_configuration: "{{ hostvars['localhost'].global_configuration }}"
    - remote_locations: "{{ hostvars['localhost'].remote_locations }}"
    - instances: "{{ hostvars['localhost'].instances }}"
    - container_registry: "{{ hostvars['localhost'].container_registry }}"
    - contrail_version_tag: "{{ hostvars['localhost'].contrail_version_tag }}"
    - roles: "{{ hostvars['localhost'].roles }}"
    - node_roles_dict: "{{ hostvars['localhost'].node_roles_dict }}"
    - api_server: "{{ hostvars['localhost'].api_server }}"
  environment:
    - https_proxy: "{{ contrail_configuration.HTTPS_PROXY|default('') }}"
    - http_proxy: "{{ contrail_configuration.HTTP_PROXY|default('') }}"
    - "{{ contrail_ansible_environment | default({}) }}"
  tags: always
